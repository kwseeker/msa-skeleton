# 调度器名称,默认：QuartzScheduler
org.quartz.scheduler.instantceName=QuartzScheduler
org.quartz.scheduler.instantId=scheduler
# 是否跳过检查更新Quartz版本，默认：false
org.quartz.scheduler.skipUpdateCheck=true
org.quzrtz.scheduler.startupDelay=10
org.quartz.scheduler.rmi.export=false
org.quartz.scheduler.rmi.proxy=false
# 使Job执行在一个UserTransaction中完成，默认：false
org.quartz.scheduler.wrapJobExecutionInUserTransaction=false

# 使用的线程池实例类
org.quartz.threadPool.class=org.quartz.simpl.SimpleThreadPool
# 线程池中最大线程的数量
org.quartz.threadPool.threadCount=5
# 线程优先级，默认：5
org.quartz.threadPool.threadPriority=5
# 默认：false
org.quartz.threadPool.threadsInheritContextClassLoaderOfInitializingThread=true

# 触发允许最大超时时间(同一时间触发的任务多于线程池最大线程数，会引发有定时任务排队，进而产生触发延迟)，默认：60000ms
org.quartz.jobStore.misfireThreshold = 5000
# jobs triggers 等数据都被存储在内存中（还可以配置存储在数据库）
org.quartz.jobStore.class = org.quartz.simpl.RAMJobStore
#org.quartz.jobStore.class = org.quartz.impl.jdbcjobstore.JobStoreTX
#org.quartz.jobStore.tablePrefix = QRTZ_
#org.quartz.jobStore.dataSource = qzDS
#org.quartz.dataSource.qzDS.driver = com.mysql.jdbc.Driver
#org.quartz.dataSource.qzDS.URL = jdbc:mysql://localhost:3306/quartz_demo?serverTimezone=Hongkong&characterEncoding=utf-8
#org.quartz.dataSource.qzDS.user = root
#org.quartz.dataSource.qzDS.password = mysql

# JVM退出之前执行清理工作
org.quartz.plugin.shutdownHook.class=org.quartz.plugins.management.ShutdownHookPlugin
org.quartz.plugin.shutdownHook.cleanShutdown=true